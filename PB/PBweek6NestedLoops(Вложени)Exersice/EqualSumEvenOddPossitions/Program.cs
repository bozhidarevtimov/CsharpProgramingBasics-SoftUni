using System;

namespace EqualSumEvenOddPossitions
{
    class Program
    {
        static void Main(string[] args)
        {
            //Напишете програма, която чете от конзолата две шестцифрени цели числа в диапазона от 100000 до 300000.
            //Винаги първото въведено число ще бъде по малко от второто.На конзолата да се отпечатат на 1 ред разделени
            //с интервал всички числа, които се намират между двете, прочетени от конзолата числа и отговарят на следното условие:
            //•	сумата от цифрите на четни и нечетни позиции да са равни.Ако няма числа, отговарящи на условието на конзолата
            //не се извежда резултат.

            //1. ЧЕТЕМ НАЧАЛО И КРАЙ НА ИНТЕРВАЛА
            int start = int.Parse(Console.ReadLine());
            int end = int.Parse(Console.ReadLine());


            //2.ПУСКАМЕ ЦИКЪЛ КОЙТО ДА СЕ ВЪРТИ ОТ НАЧАЛОТО ДО КРАЯТ НА ИНТЕРВАЛА
            for (int num = start; num <= end; num++)
            {
                //променливи за сумата на четни и нечетни, тъй като те ще са различни за всяко число което проверяваме
                //ги създаваме в цикула за да се нулират при всяко завъртане
                int oddSum = 0;
                int evenSum = 0;
                //за да вземем дадена позиция от числото в първит цикъл ще го превърнем в стринг за да взимаме цифра по индекс
                string currentNum = num.ToString();
                //3. ВЪТРЕШЕН ЦИКЪЛ КОЙТО ДА СЕ ВЪРТИ ОТ ПЪРВАТА ЦИФРА  ДО ПОСЛЕДНАТА От 1до6 защото знаем че въвежданите числа
                //от конзолата ще са от 6 цифри
                for (int i = 0; i < 6; i++)
                {
                    //= ПРАВИМ ПРОВЕРКА ДАЛИ ТЕКУЩАТА ЦИФРА Е НА ЧЕТНА ИЛИ НЕЧЕТНА И СУМИРАМЕ 
                    //=ВЗИМАМЕ ЧИСЛОТО НА КОЕТО СЕ НАМИРАМЕ В МОМЕНТА И НАМИРАМЕ СУМАТА НА ЧЕТНИ И НЕЧЕТНИ
                    if (i % 2 == 0)
                    {
                        //за да вземем дадена позиция от числото в първит цикъл сме го превърнем в стринг за да взимаме цифра по индекс
                        evenSum += currentNum[i];
                    }
                    else 
                    {
                        oddSum += currentNum[i];
                    }


                }
                //=СЛЕД ПРИКЛЮЧВАНЕТО НА ВЪТРЕШНИЯТ ЦИКЪЛ
                //= ПРОВЕРЯВАМЕ ДАЛИ СУМИТЕ СА РАВНИ И АКО ДА ПРИНТИРАМЕ ЧИСЛОТО
                if (oddSum == evenSum)
                {
                    Console.Write($"{num} ");
                }
            }



        }
    }
}
